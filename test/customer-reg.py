# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import NoSuchElementException

# from reportlab.pdfgen import canvas


# def create_sample_pdf(file_path):
#     c = canvas.Canvas(file_path)
#     c.drawString(72, 800, "Sample PDF Content")
#     c.save()



from time import sleep

class TestCustomerreg():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_customerreg(self):
    # Test name: Customer-reg
    # Step # | name | target | value
    # 1 | open | / | 
    self.driver.get("http://localhost:8000/")
    # 2 | setWindowSize | 1920x1008 | 
    self.driver.set_window_size(1920, 1008)
    # 3 | click | linkText=Login | 
    self.driver.find_element(By.LINK_TEXT, "Login").click()
    # 4 | click | linkText=Signup | 
    self.driver.find_element(By.LINK_TEXT, "Signup").click()
    # 5 | click | css=.row:nth-child(2) p | 
    self.driver.find_element(By.CSS_SELECTOR, ".row:nth-child(2) p").click()
    # 6 | click | id=name | 
    self.driver.find_element(By.ID, "name").click()
    # 7 | type | id=name | Nirmal
    self.driver.find_element(By.ID, "name").send_keys("Nirmal")
    # 8 | click | id=address | 
    self.driver.find_element(By.ID, "address").click()
    # 9 | type | id=address |  Colombo
    self.driver.find_element(By.ID, "address").send_keys(" Colombo")
    # 10 | click | id=email | 
    self.driver.find_element(By.ID, "email").click()
    # 11 | type | id=email | nirmaltest@wl.com
    self.driver.find_element(By.ID, "email").send_keys("nirmalsavinda@wl.com")
    # 12 | click | id=number | 
    self.driver.find_element(By.ID, "number").click()
    # 13 | type | id=number | 076024489
    self.driver.find_element(By.ID, "number").send_keys("0716024489")
    # 14 | click | id=nic | 
    self.driver.find_element(By.ID, "nic").click()
    # 15 | type | id=nic | 200118603720
    self.driver.find_element(By.ID, "nic").send_keys("200118603720")
    # 16 | click | id=password | 
    self.driver.find_element(By.ID, "password").click()
    # 17 | type | id=password | Admin@1234
    self.driver.find_element(By.ID, "password").send_keys("Admin@1234")
    # 18 | click | id=customer-signup | 
    self.driver.find_element(By.ID, "customer-signup").click()
    # 19 | click | id=customer-signup | 
    wait = WebDriverWait(self.driver, timeout=10, poll_frequency=0.1, ignored_exceptions=[NoSuchElementException])
    # id = alert
    wait.until(EC.visibility_of_element_located((By.ID, "alert")))
    text = self.driver.find_element(By.ID, "alert").text
    print(text)
    sleep(4)

    assert "success" in text, "success not in text" 

    # sleep(40)

    
    # 20 | close |  | 
    self.driver.close()
  


if __name__ == "__main__":
    pytest.main()
    customerReg = TestCustomerreg()
    customerReg.setup_method("none")
    customerReg.test_customerreg()
    customerReg.teardown_method("none")
    print("Test Customer Registration Completed")



